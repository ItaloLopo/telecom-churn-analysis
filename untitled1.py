# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zgAN-W7fiY5eNNZDDQ-ZlycrGvgh6YzV
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# 1. Carregar os dados diretamente do GitHub
url = 'https://raw.githubusercontent.com/alura-cursos/challenge2-data-science/refs/heads/main/TelecomX_Data.json'
df = pd.read_json(url)

# 2. Visualizar as primeiras linhas
print("Visualização inicial:")
print(df.head())

# 3. Informações gerais sobre o DataFrame
print("\nInformações do DataFrame:")
print(df.info())

# 4. Verificar dados ausentes
print("\nValores nulos por coluna:")
print(df.isnull().sum())

# 5. Estatísticas descritivas básicas
print("\nEstatísticas descritivas:")
print(df.describe(include='all'))

# 6. Exemplo de gráfico - distribuição de churn
plt.figure(figsize=(6, 4))
sns.countplot(x='Churn', data=df)
plt.title('Distribuição de Churn')
plt.xlabel('Churn')
plt.ylabel('Contagem')
plt.show()

# Expandir colunas de dicionários para colunas normais
customer_expanded = pd.json_normalize(df['customer'])
phone_expanded = pd.json_normalize(df['phone'])
internet_expanded = pd.json_normalize(df['internet'])
account_expanded = pd.json_normalize(df['account'])

# Juntar tudo em um único DataFrame
df_clean = pd.concat([df[['customerID', 'Churn']],
                      customer_expanded,
                      phone_expanded,
                      internet_expanded,
                      account_expanded], axis=1)

# Visualizar as primeiras linhas do DataFrame limpo
print(df_clean.head())

# Substituir espaços em branco por NaN e converter para float
df_clean['Charges.Total'] = pd.to_numeric(df_clean['Charges.Total'], errors='coerce')
df_clean['Charges.Monthly'] = pd.to_numeric(df_clean['Charges.Monthly'], errors='coerce')

print(df_clean.isnull().sum())

# Remover linhas com Charges.Total nulo
df_clean = df_clean.dropna(subset=['Charges.Total'])

import seaborn as sns
import matplotlib.pyplot as plt

plt.figure(figsize=(8, 5))
sns.countplot(data=df_clean, x='Contract', hue='Churn')
plt.title('Churn por Tipo de Contrato')
plt.ylabel('Número de Clientes')
plt.xlabel('Tipo de Contrato')
plt.xticks(rotation=15)
plt.show()

plt.figure(figsize=(8, 5))
sns.countplot(data=df_clean, x='InternetService', hue='Churn')
plt.title('Churn por Tipo de Internet')
plt.ylabel('Número de Clientes')
plt.xlabel('Tipo de Internet')
plt.show()